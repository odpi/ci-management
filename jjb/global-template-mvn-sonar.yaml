####################
# COMMON FUNCTIONS #
####################

- maven_common: &maven_common
    name: maven-common

    ######################
    # Default parameters #
    ######################

    archive-artifacts: >
      */.log
      */hs_err_.log
      */target/*/feature.xml
      **/target/failsafe-reports/failsafe-summary.xml
      */target/surefire-reports/-output.txt
    #####################
    # Job Configuration #
    #####################

    project-type: freestyle
    # project-type: pipeline
    node: '{build-node}'

    properties:
      - lf-infra-properties:
          build-days-to-keep: '{build-days-to-keep}'

    parameters:
      - lf-infra-parameters:
          project: '{project}'
          branch: '{branch}'
          stream: '{stream}'
      - lf-infra-maven-parameters:
          mvn-opts: '{mvn-opts}'
          mvn-params: '{mvn-params}'
          mvn-version: '{mvn-version}'
      - string:
          name: ARCHIVE_ARTIFACTS
          default: '{archive-artifacts}'
          description: Artifacts to archive to the logs server.

    wrappers:
      - lf-infra-wrappers:
          build-timeout: '{build-timeout}'
          jenkins-ssh-credential: '{jenkins-ssh-credential}'

    publishers:
      # TODO: Make email notification work.
      # - lf-infra-email-notify:
      #     email-recipients: '{email-recipients}'
      #     email-prefix: '[releng]'
      - lf-infra-publish
###############
# Maven Sonar #
###############

- maven_sonar: &maven_sonar
    name: maven-sonar

    ######################
    # Default parameters #
    ######################

    branch: master  # Sonar should always be run on master branch
    build-days-to-keep: 7
    build-timeout: 60
    cron: 'H H * * 6'  # run weekly
    disable-job: false
    git-url: '$GIT_URL/$PROJECT'
    github-url: 'https://github.com'
    java-version: openjdk8
    mvn-global-settings: global-settings
    mvn-opts: ''
    mvn-params: ''
    mvn-version: mvn35
    sonar-mvn-goal: 'sonar:sonar'
    sonarcloud: false
    sonarcloud-project-key: ''
    sonarcloud-project-organization: ''
    sonarcloud-api-token: ''
    stream: master
    submodule-recursive: true
    submodule-timeout: 10
    submodule-disable: false

    gerrit_sonar_triggers:
      - comment-added-contains-event:
          comment-contains-value: '^Patch Set\s+\d+:\s+run-sonar\s*$'

    #####################
    # Job Configuration #
    #####################

    disabled: '{disable-job}'

    parameters:
      - lf-infra-parameters:
          project: '{project}'
          branch: '{branch}'
          stream: '{stream}'
      - lf-infra-maven-parameters:
          mvn-opts: '{mvn-opts}'
          mvn-params: '{mvn-params}'
          mvn-version: '{mvn-version}'
      - string:
          name: ARCHIVE_ARTIFACTS
          default: '{archive-artifacts}'
          description: Artifacts to archive to the logs server.
      - string:
          name: SONAR_MAVEN_GOAL
          default: '{sonar-mvn-goal}'
          description: |
              Maven goals to pass to the Sonar call. Typically sonar:sonar
              however to use a specific version of the sonar-maven-plugin we
              can call "org.codehaus.mojo:sonar-maven-plugin:3.3.0.603:sonar".
    triggers:
      - timed: '{obj:cron}'
      - gerrit:
          server-name: '{gerrit-server-name}'
          trigger-on: '{obj:gerrit_sonar_triggers}'
          projects:
            - project-compare-type: 'ANT'
              project-pattern: '{project}'
              branches:
                - branch-compare-type: 'ANT'
                  branch-pattern: '**/master'
          skip-vote:
            successful: true
            failed: true
            unstable: true
            notbuilt: true

    builders:
      - lf-infra-pre-build
      # With SonarCloud
      - conditional-step:
          condition-kind: boolean-expression
          condition-expression: '{sonarcloud}'
          steps:
            - shell: echo 'Using SonarCloud'
            - infra-maven-sonarcloud:
                java-version: '{java-version}'
                mvn-settings: '{mvn-settings}'
                mvn-version: '{mvn-version}'
                sonarcloud-project-key: '{sonarcloud-project-key}'
                sonarcloud-project-organization: '{sonarcloud-project-organization}'
                sonarcloud-api-token: '{sonarcloud-api-token}'
      # With SonarQube
      - conditional-step:
          condition-kind: not
          condition-operand:
            condition-kind: boolean-expression
            condition-expression: '{sonarcloud}'
          steps:
            - shell: echo 'Using SonarQube'
            - infra-maven-sonar:
                java-version: '{java-version}'
                mvn-settings: '{mvn-settings}'
                mvn-version: '{mvn-version}'

    publishers:
      - lf-jacoco-report
      - findbugs
      - lf-infra-publish

- builder:
    name: infra-maven-sonar
    # Run a Sonar build with Maven
    builders:
      - lf-maven-install:
          mvn-version: '{mvn-version}'
      - lf-update-java-alternatives:
          java-version: '{java-version}'
      - inject:
          # Switch this to the sonar wrapper when JJB 2.0 is available
          properties-content: SONAR_HOST_URL=$SONAR_URL
      - lf-provide-maven-settings:
          global-settings-file: global-settings
          settings-file: '{mvn-settings}'
      - shell: !include-raw-escape:
          - ../global-jjb/shell/common-variables.sh
          - shell/maven-sonar.sh
      - lf-provide-maven-settings-cleanup

- builder:
    name: infra-maven-sonarcloud
    # Run a Sonar build with Maven
    builders:
      - lf-maven-install:
          mvn-version: '{mvn-version}'
      - lf-update-java-alternatives:
          java-version: '{java-version}'
      - inject:
          # Switch this to the sonar wrapper when JJB 2.0 is available
          properties-content: |
            SONAR_HOST_URL=https://sonarcloud.io
            PROJECT_KEY={sonarcloud-project-key}
            PROJECT_ORGANIZATION={sonarcloud-project-organization}
            API_TOKEN={sonarcloud-api-token}
            
      - lf-provide-maven-settings:
          global-settings-file: global-settings
          settings-file: '{mvn-settings}'
      - shell: !include-raw-escape:
          - ../global-jjb/shell/common-variables.sh
          - shell/maven-sonar.sh
      - lf-provide-maven-settings-cleanup

- job-template:
    name: '{project-name}-sonar'
    id: odpi-github-maven-sonar
    <<: *maven_common
    # yamllint disable-line rule:key-duplicates
    <<: *maven_sonar

    properties:
      - lf-infra-properties:
          build-days-to-keep: '{build-days-to-keep}'
      - github:
          url: '{github-url}/{github-org}/{project}'

    scm:
      - lf-infra-github-scm:
          url: '{git-clone-url}{github-org}/{project}'
          refspec: '+refs/pull/*:refs/remotes/origin/pr/*'
          branch: '$sha1'
          submodule-recursive: '{submodule-recursive}'
          submodule-timeout: '{submodule-timeout}'
          submodule-disable: '{submodule-disable}'
          choosing-strategy: default
          jenkins-ssh-credential: '{jenkins-ssh-credential}'

    triggers:
      - timed: '{obj:cron}'
      - github-pull-request:
          trigger-phrase: '^run-sonar$'
          only-trigger-phrase: true
          status-context: 'Maven Sonar'
          permit-all: true
          github-hooks: true
          org-list:
            - '{github-org}'
          white-list: '{obj:github_pr_whitelist}'
          admin-list: '{obj:github_pr_admin_list}'
          white-list-target-branches:
            - '{branch}'
